{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.jpg","components/Logo/Logo.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","starName","prob","alt","id","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","pa3","paddingTop","brain","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignin","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","type","onChange","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","onButtonSubmit","placeholder","particlesOptions","initialState","input","route","joined","App","data","calculateFaceBox","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","calculateNameAndProb","concepts","replace","w","c","toUpperCase","displayNameAndProb","count","Object","assign","catch","err","console","log","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58eb60f1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n            </nav>\n        );\n    } else {\n        return (\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n            </nav>\n        );\n    }\n}\n\nexport default Navigation","import React from 'react';\nimport './FaceRecognition.css'\n\nconst FaceRecognition = ({ imageUrl, box, starName, prob }) => {\n    const Text = 'This people in the picture is\\n'\n    if (imageUrl !== '') {\n        return (\n            <div>\n                <div className='fl w-50 mt4 center'>\n                    <div className='absolute center mt2'>\n                        <img alt='' id='inputimage' src={imageUrl} width='500px' height='auto' />\n                        <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\n                    </div>\n                </div>\n                <div className='fl w-50 mt5 tc'>\n                    <div className='f3'>{Text}</div>\n                    <div className='f2 mt4 b'>{starName}</div>\n                    <div className='f3 mt4'>with a prob. of</div>\n                    <div className='f2 mt4 i'>{prob}</div>\n                </div>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nexport default FaceRecognition","export default __webpack_public_path__ + \"static/media/brain.9134f241.jpg\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.jpg'\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner\" pa3><img style={{ paddingTop: '5px' }} alt='Brain logo from Vecteezy.com' src={brain} /></div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            <div className='black f3'>\n                {`${name}, your current entry counts is...`}\n            </div>\n            <div className='black f1'>\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    onSubmitSignin = () => {\n        fetch('https://smart-brain-api-rnd.herokuapp.com/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home')\n                }\n            })\n    }\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-lightest-blue hover-black w-100\" \n                                type=\"email\" \n                                name=\"email-address\" \n                                id=\"email-address\"\n                                onChange={this.onEmailChange} />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-lightest-blue hover-black w-100\" \n                                type=\"password\" \n                                name=\"password\" \n                                id=\"password\"\n                                onChange={this.onPasswordChange} />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                onClick={this.onSubmitSignin}\n                                type=\"submit\"\n                                value=\"Sign in\" />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Signin;\n","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignin = () => {\n        fetch('https://smart-brain-api-rnd.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n\n    render() {\n        // const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-lightest-blue hover-black w-100\" \n                                type=\"text\" \n                                name=\"name\" \n                                id=\"name\" \n                                onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-lightest-blue hover-black w-100\" \n                                type=\"email\" \n                                name=\"email-address\" \n                                id=\"email-address\" \n                                onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-lightest-blue hover-black w-100\" \n                                type=\"password\" \n                                name=\"password\" \n                                id=\"password\" \n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input\n                                onClick={this.onSubmitSignin}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                type=\"submit\"\n                                value=\"Register\" \n                                />\n                        </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3 tc'>\n                {'This Magic Brain will recognize celebrity face in your picture. Give it a try!'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-80 center br2' type='text' placeholder='Paste URL' onChange={onInputChange} />\n                    <button\n                        className='grow w-20 d f4 link ph3 pv2 dib black bg-washed-green br2'\n                        onClick={onButtonSubmit}\n                    >Detect</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default ImageLinkForm","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport './App.css'\n\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 150\n    },\n    \"size\": {\n      \"value\": 4\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  starName: '',\n  prob: '',\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n  \n  loadUser = (data) => {\n    // console.log(data)\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  \n  calculateFaceBox = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box })\n  }\n\n  calculateNameAndProb = (data) => {\n    const starName = data.outputs[0].data.regions[0].data.concepts[0].name.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\n    const prob = data.outputs[0].data.regions[0].data.concepts[0].value\n    return [starName, prob]\n  }\n\n  displayNameAndProb = (data) => {\n    this.setState({ starName: data[0] })\n    this.setState({ prob: data[1] })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://smart-brain-api-rnd.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          input: this.state.input,\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://smart-brain-api-rnd.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id,\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(err => console.log(err));\n        }\n        this.displayFaceBox(this.calculateFaceBox(response));\n        this.displayNameAndProb(this.calculateNameAndProb(response));\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route })\n    if (route === 'signout') {\n      // console.log('signout')\n      this.setState(initialState)\n    } else if (route === 'home') {\n      // console.log('home')\n      this.setState({ isSignedIn: true })\n    }\n    // console.log(route)\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation \n          onRouteChange={this.onRouteChange} \n          isSignedIn={this.state.isSignedIn}\n        />\n        { this.state.route === 'home'\n          ? <div>\n            <Logo />\n            <Rank \n              name={this.state.user.name} \n              entries={this.state.user.entries} \n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit} \n            />\n            <FaceRecognition \n              box={this.state.box} \n              imageUrl={this.state.imageUrl} \n              starName={this.state.starName} \n              prob={this.state.prob} \n            />\n          </div>\n          : (\n            this.state.route === 'signin'\n            ? <Signin \n                isSignedIn={this.isSignedIn} \n                loadUser={this.loadUser} \n                onRouteChange={this.onRouteChange} \n              />\n            : <Register \n                loadUser={this.loadUser} \n                onRouteChange={this.onRouteChange} \n              />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}